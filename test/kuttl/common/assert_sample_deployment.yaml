#
# Check for:
#
# - 1 NeutronAPI CR
# - Deployment with 1 Pod for NeutronAPI CR
# - Neutron-internal Service
# - Neutron-public Service

apiVersion: neutron.openstack.org/v1beta1
kind: NeutronAPI
metadata:
  finalizers:
  - NeutronAPI
  name: neutron
spec:
  containerImage: quay.io/podified-antelope-centos9/openstack-neutron-server:current-podified
  customServiceConfig: |
    [DEFAULT]
    debug = true
  databaseInstance: openstack
  databaseUser: neutron
  debug:
    bootstrap: false
    dbSync: false
    service: false
  passwordSelectors:
    database: NeutronDatabasePassword
    service: NeutronPassword
  preserveJobs: false
  rabbitMqClusterName: rabbitmq
  replicas: 1
  secret: osp-secret
  serviceUser: neutron
status:
  databaseHostname: openstack
  transportURLSecret: rabbitmq-transport-url-neutron-neutron-transport
  readyCount: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neutron
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      service: neutron
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: neutron
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - neutron
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - -c
        - /usr/local/bin/kolla_set_configs && /usr/local/bin/kolla_start
        command:
        - /bin/bash
        image: quay.io/podified-antelope-centos9/openstack-neutron-server:current-podified
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9696
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: neutron-api
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9696
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      initContainers:
      - command:
        - /bin/bash
        - -c
        - /usr/local/bin/container-scripts/init.sh
        env:
        - name: DatabaseHost
          value: openstack
        - name: Database
          value: neutron
        - name: DatabaseUser
          value: neutron
        - name: DatabasePassword
          valueFrom:
            secretKeyRef:
              key: NeutronDatabasePassword
              name: osp-secret
        - name: NeutronPassword
          valueFrom:
            secretKeyRef:
              key: NeutronPassword
              name: osp-secret
        - name: TransportURL
          valueFrom:
            secretKeyRef:
              key: transport_url
              name: rabbitmq-transport-url-neutron-neutron-transport
        image: quay.io/podified-antelope-centos9/openstack-neutron-server:current-podified
        imagePullPolicy: IfNotPresent
        name: init
        resources: {}
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: neutron-neutron
      serviceAccountName: neutron-neutron
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
# the openshift annotations can't be checked through the deployment above
apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/scc: anyuid
  labels:
    service: neutron
---
apiVersion: v1
kind: Service
metadata:
  labels:
    internal: "true"
    service: neutron
  name: neutron-internal
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: neutron-internal
    port: 9696
    protocol: TCP
    targetPort: 9696
  selector:
    service: neutron
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    public: "true"
    service: neutron
  name: neutron-public
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: neutron-public
    port: 9696
    protocol: TCP
    targetPort: 9696
  selector:
    service: neutron
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: keystone.openstack.org/v1beta1
kind: KeystoneEndpoint
metadata:
  name: neutron
  ownerReferences:
  - apiVersion: neutron.openstack.org/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: NeutronAPI
    name: neutron
---
# the actual addresses of the api endpoints are platform specific, so we can't rely on
# kuttl asserts to check them. This short script gathers the addresses and checks that
# the two endpoints are defined and their addresses follow the default pattern
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
commands:
  - script: |
      template='{{.spec.endpoints.internal}}{{":"}}{{.spec.endpoints.public}}{{"\n"}}'
      regex="http:\/\/neutron-internal.$NAMESPACE.*:http:\/\/neutron-public.$NAMESPACE.*"
      apiEndpoints=$(oc get -n $NAMESPACE KeystoneEndpoint neutron -o go-template="$template")
      matches=$(echo "$apiEndpoints" | sed -e "s?$regex??")
      if [[ -z "$matches" ]]; then
        exit 0
      else
        exit 1
      fi
