[DEFAULT]
bind_host = localhost
bind_port = 9697
transport_url={{ .TransportURL }}
core_plugin = {{ .CorePlugin }}
{{ if .IsOVN }}
  {{ if .EnableFwaas }}
service_plugins = qos,ovn-router,trunk,segments,port_forwarding,log,firewall_v2
  {{ else }}
service_plugins = qos,ovn-router,trunk,segments,port_forwarding,log
  {{ end }}
{{ else }}
  {{ if .EnableFwaas }}
service_plugins = qos,trunk,segments,port_forwarding,log,firewall_v2
  {{ else }}
service_plugins = qos,trunk,segments,port_forwarding,log
  {{ end }}
{{ end }}
dns_domain = openstackgate.local
dhcp_agent_notification = false
api_workers = 2
rpc_workers = 1

[database]
connection=mysql+pymysql://{{ .DbUser }}:{{ .DbPassword }}@{{ .DbHost }}/{{ .Db }}?read_default_file=/etc/my.cnf
# NOTE(ykarel): It is required to be set for multi master galera, without it set
# there can be reads from not up to date db instance and that leads to various issues.
mysql_wsrep_sync_wait = 1

{{ if eq .CorePlugin "ml2" }}
[ml2]
mechanism_drivers = {{ .Ml2MechanismDrivers }}
type_drivers = local,flat,vlan,geneve
tenant_network_types = geneve
extension_drivers = qos,port_security,dns_domain_ports

[ml2_type_geneve]
vni_ranges = 1:65536
max_header_size = 38

[ml2_type_vlan]
network_vlan_ranges = datacentre

{{ if .IsOVN }}
[ovn]
ovn_nb_connection = {{ .NBConnection }}
ovn_sb_connection = {{ .SBConnection }}
ovn_metadata_enabled = True
enable_distributed_floating_ip=True
ovn_emit_need_to_frag = True
{{- if .OVNDB_TLS }}
ovn_nb_private_key = /etc/pki/tls/private/ovndb.key
ovn_nb_certificate = /etc/pki/tls/certs/ovndb.crt
ovn_nb_ca_cert = /etc/pki/tls/certs/ovndbca.crt
ovn_sb_private_key = /etc/pki/tls/private/ovndb.key
ovn_sb_certificate = /etc/pki/tls/certs/ovndb.crt
ovn_sb_ca_cert = /etc/pki/tls/certs/ovndbca.crt
{{- end }}
{{- end }}
{{- end }}

[keystone_authtoken]
www_authenticate_uri = {{ .KeystonePublicURL }}
auth_url = {{ .KeystoneInternalURL }}
memcached_servers={{ .MemcachedServers }}
memcache_pool_dead_retry = 10
memcache_pool_conn_get_timeout = 2
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = {{ .ServiceUser }}
password = {{ .ServicePassword }}
interface = internal
{{if (index . "MemcachedAuthCert")}}
memcache_tls_certfile = {{ .MemcachedAuthCert }}
memcache_tls_keyfile = {{ .MemcachedAuthKey }}
memcache_tls_cafile = {{ .MemcachedAuthCa }}
memcache_tls_enabled = true
{{end}}

[nova]
auth_url = {{ .KeystoneInternalURL }}
auth_type = password
project_domain_name = Default
user_domain_name = Default
region_name = regionOne
project_name = service
username = {{ .ServiceUser }}
endpoint_type = internal
password = {{ .ServicePassword }}

[placement]
auth_url = {{ .KeystoneInternalURL }}
auth_type = password
project_domain_name = Default
user_domain_name = Default
region_name = regionOne
project_name = service
username = {{ .ServiceUser }}
endpoint_type = internal
password = {{ .ServicePassword }}

[oslo_concurrency]
lock_path = /var/lib/neutron/tmp

[cache]
{{if .MemcachedTLS}}
backend = oslo_cache.memcache_pool
memcache_servers = {{ .MemcachedServers }}
memcache_socket_timeout = 0.5
memcache_pool_connection_get_timeout = 1
{{if (index . "MemcachedAuthCert")}}
tls_certfile={{ .MemcachedAuthCert }}
tls_keyfile={{ .MemcachedAuthKey }}
tls_cafile={{ .MemcachedAuthCa }}
{{end}}
{{else}}
backend = dogpile.cache.memcached
memcache_servers = {{ .MemcachedServersWithInet }}
{{end}}
enabled=true
tls_enabled={{ .MemcachedTLS }}
memcache_dead_retry = 30

[oslo_policy]
policy_file = /etc/neutron/policy.yaml
enforce_scope = True
enforce_new_defaults = True

{{ if and .EnableFwaas .IsOVN }}
[service_providers]
service_provider = FIREWALL_V2:fwaas_db:neutron_fwaas.services.firewall.service_drivers.ovn.firewall_l3_driver.OVNFwaasDriver:default
{{ end }}
